# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # do a matrix test with different node versions
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 14.x, 16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # try to perform a nodejs setup
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # docker test
    - name: install+run docker-unifi-controller
      run: |
        # create docker-unifi-controller
        docker create --name=unifi-controller -e PUID=1001 -e PGID=116 -e MEM_LIMIT=1024M -p 8443:8443 -v $GITHUB_WORKSPACE/unifi-storage:/config linuxserver/unifi-controller
        # do an initial startup to create databse&co
        docker start unifi-controller
        # stop the unifi-controller right away and
        # install our own demo database instead
        docker stop unifi-controller
        sudo rm -rf unifi-storage/data
        sudo tar -C unifi-storage -xf $GITHUB_WORKSPACE/.github/workflows/db-demo-dump.tar.bz2
        # final unifi-controller startup
        docker start unifi-controller
        # wait for unifi-controller to be ready
        while ! curl -ks https://127.0.0.1:8443; do echo waiting for unifi-controller; sleep 2; done

    #- name: remote debug tmate session
    #  uses: mxschmitt/action-tmate@v1

    # run npm tests
    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm test
      env:
        CI: true
